name: CI
on:
  push:
    branches: [ implementation ]
  pull_request:
    branches: [ implementation ]

jobs:
  backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [identity, registry, eligibility, payment, analytics]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r services/${{ matrix.service }}/requirements.txt
          pip install pytest httpx pytest-asyncio pytest-testcontainers testcontainers[postgresql]
      - name: Run unit tests
        run: pytest -q

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Compose up (DBs and services)
        run: |
          docker compose up -d --build postgres mongo redis
          docker compose up -d --build registry payment analytics
          # wait for services to become ready
          for i in {1..30}; do curl -sf http://localhost:8002/health && break || sleep 1; done
          for i in {1..30}; do curl -sf http://localhost:8004/health && break || sleep 1; done
          for i in {1..30}; do curl -sf http://localhost:8005/health && break || sleep 1; done
      - name: API smoke tests
        run: |
          curl -f http://localhost:8002/api/v1/households || true
          curl -f http://localhost:8004/api/v1/payments || true
          curl -f http://localhost:8005/api/v1/analytics/summary
      - name: Compose down
        if: always()
        run: docker compose down -v

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run build

  e2e:
    runs-on: ubuntu-latest
    needs: [frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Start backend stack (registry, analytics)
        run: |
          docker compose up -d --build postgres mongo redis registry analytics
          for i in {1..30}; do curl -sf http://localhost:8002/health && break || sleep 1; done
          for i in {1..30}; do curl -sf http://localhost:8005/health && break || sleep 1; done
      - name: Build and start web
        working-directory: web
        run: |
          npm ci
          npm install -D @playwright/test
          npm run build
          nohup npm run start -- -p 3000 >/dev/null 2>&1 &
          for i in {1..30}; do curl -sf http://localhost:3000/ && break || sleep 1; done
      - name: Install Playwright browsers
        working-directory: web
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: web
        run: npx playwright test --reporter=line
      - name: Compose down
        if: always()
        run: docker compose down -v
