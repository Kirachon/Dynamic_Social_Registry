version: '3.9'
services:
  otel-collector:
    image: otel/opentelemetry-collector:0.103.1
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./infra/otel/otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"
  prometheus:
    image: prom/prometheus:v2.54.1
    volumes:
      - ./infra/otel/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
  postgres:
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: dsrs
      POSTGRES_USER: dsrs
      POSTGRES_DB: dsrs
    ports: ["5432:5432"]
  mongo:
    image: mongo:6
    ports: ["27017:27017"]
  redis:
    image: redis:7
    ports: ["6379:6379"]

  identity:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.fastapi
      args:
        SERVICE_PATH: services/identity
    environment:
      ISSUER: http://localhost:8080/realms/dsrs
      AUDIENCE: dsrs-api
      ALLOW_INSECURE_LOCAL: "1"
    ports: ["8001:8000"]

  registry:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.fastapi
      args:
        SERVICE_PATH: services/registry
    environment:
      ISSUER: http://localhost:8080/realms/dsrs
      AUDIENCE: dsrs-api
      ALLOW_INSECURE_LOCAL: "1"
      DATABASE_URL: postgresql+psycopg://dsrs:dsrs@postgres:5432/dsrs
      KAFKA_BROKERS: redpanda:9092
    depends_on: [postgres, redpanda]
    ports: ["8002:8000"]

  eligibility:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.fastapi
      args:
        SERVICE_PATH: services/eligibility
    environment:
      ISSUER: http://localhost:8080/realms/dsrs
      AUDIENCE: dsrs-api
      ALLOW_INSECURE_LOCAL: "1"
      DATABASE_URL: postgresql+psycopg://dsrs:dsrs@postgres:5432/dsrs
      KAFKA_BROKERS: redpanda:9092
    depends_on: [postgres, redpanda]
    ports: ["8003:8000"]

  payment:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.fastapi
      args:
        SERVICE_PATH: services/payment
    environment:
      ISSUER: http://localhost:8080/realms/dsrs
      AUDIENCE: dsrs-api
      ALLOW_INSECURE_LOCAL: "1"
      DATABASE_URL: postgresql+psycopg://dsrs:dsrs@postgres:5432/dsrs
      KAFKA_BROKERS: redpanda:9092
    depends_on: [postgres, redpanda]
    ports: ["8004:8000"]

  analytics:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.fastapi
      args:
        SERVICE_PATH: services/analytics
    environment:
      ISSUER: http://localhost:8080/realms/dsrs
      AUDIENCE: dsrs-api
      ALLOW_INSECURE_LOCAL: "1"
      MONGO_URL: mongodb://mongo:27017
      KAFKA_BROKERS: redpanda:9092
    depends_on: [mongo, redpanda]
    ports: ["8005:8000"]

  kong:
    image: kong:3.6
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /etc/kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_LOG_LEVEL: info
    volumes:
      - ./infra/docker/kong/kong.yml:/etc/kong/kong.yml:ro
    ports:
      - "8000:8000" # proxy
      - "8001:8001" # admin api
    depends_on:
      - identity
      - registry
      - eligibility
      - payment
      - analytics

  redpanda:
    image: docker.redpanda.com/redpanda/redpanda:v24.1.8
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "bash", "-lc", "nc -z localhost 9092"]
      interval: 5s
      timeout: 2s
      retries: 30

